// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icon-doc-name: 'icon-doc';
$icon-doc-x: 0px;
$icon-doc-y: 0px;
$icon-doc-offset-x: 0px;
$icon-doc-offset-y: 0px;
$icon-doc-width: 36px;
$icon-doc-height: 26px;
$icon-doc-total-width: 62px;
$icon-doc-total-height: 52px;
$icon-doc-image: '../sprites/sprite.png';
$icon-doc: (0px, 0px, 0px, 0px, 36px, 26px, 62px, 52px, '../sprites/sprite.png', 'icon-doc', );
$icon-language-de-name: 'icon-language-de';
$icon-language-de-x: 46px;
$icon-language-de-y: 0px;
$icon-language-de-offset-x: -46px;
$icon-language-de-offset-y: 0px;
$icon-language-de-width: 16px;
$icon-language-de-height: 16px;
$icon-language-de-total-width: 62px;
$icon-language-de-total-height: 52px;
$icon-language-de-image: '../sprites/sprite.png';
$icon-language-de: (46px, 0px, -46px, 0px, 16px, 16px, 62px, 52px, '../sprites/sprite.png', 'icon-language-de', );
$icon-language-en-name: 'icon-language-en';
$icon-language-en-x: 0px;
$icon-language-en-y: 36px;
$icon-language-en-offset-x: 0px;
$icon-language-en-offset-y: -36px;
$icon-language-en-width: 16px;
$icon-language-en-height: 16px;
$icon-language-en-total-width: 62px;
$icon-language-en-total-height: 52px;
$icon-language-en-image: '../sprites/sprite.png';
$icon-language-en: (0px, 36px, 0px, -36px, 16px, 16px, 62px, 52px, '../sprites/sprite.png', 'icon-language-en', );
$icon-language-ru-name: 'icon-language-ru';
$icon-language-ru-x: 26px;
$icon-language-ru-y: 36px;
$icon-language-ru-offset-x: -26px;
$icon-language-ru-offset-y: -36px;
$icon-language-ru-width: 16px;
$icon-language-ru-height: 16px;
$icon-language-ru-total-width: 62px;
$icon-language-ru-total-height: 52px;
$icon-language-ru-image: '../sprites/sprite.png';
$icon-language-ru: (26px, 36px, -26px, -36px, 16px, 16px, 62px, 52px, '../sprites/sprite.png', 'icon-language-ru', );
$icon-nav-dotted-name: 'icon-nav-dotted';
$icon-nav-dotted-x: 52px;
$icon-nav-dotted-y: 36px;
$icon-nav-dotted-offset-x: -52px;
$icon-nav-dotted-offset-y: -36px;
$icon-nav-dotted-width: 1px;
$icon-nav-dotted-height: 9px;
$icon-nav-dotted-total-width: 62px;
$icon-nav-dotted-total-height: 52px;
$icon-nav-dotted-image: '../sprites/sprite.png';
$icon-nav-dotted: (52px, 36px, -52px, -36px, 1px, 9px, 62px, 52px, '../sprites/sprite.png', 'icon-nav-dotted', );
$spritesheet-width: 62px;
$spritesheet-height: 52px;
$spritesheet-image: '../sprites/sprite.png';
$spritesheet-sprites: ($icon-doc, $icon-language-de, $icon-language-en, $icon-language-ru, $icon-nav-dotted, );
$spritesheet: (62px, 52px, '../sprites/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

@include sprites($spritesheet-sprites);
